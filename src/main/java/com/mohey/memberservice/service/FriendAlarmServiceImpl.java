package com.mohey.memberservice.service;import java.util.UUID;import javax.transaction.Transactional;import org.springframework.dao.DataIntegrityViolationException;import org.springframework.stereotype.Service;import com.mohey.memberservice.domain.AlarmStatusEnum;import com.mohey.memberservice.domain.FriendRequest;import com.mohey.memberservice.domain.FriendRequestStatus;import com.mohey.memberservice.domain.Member;import com.mohey.memberservice.dto.memberalram.FriendReqAlarmReqDto;import com.mohey.memberservice.dto.memberalram.FriendReqAlarmRespDto;import com.mohey.memberservice.ex.CustomApiException;import com.mohey.memberservice.repository.FriendRequestRepository;import com.mohey.memberservice.repository.MemberRepository;import lombok.RequiredArgsConstructor;@RequiredArgsConstructor@Servicepublic class FriendAlarmServiceImpl implements FriendAlarmService {	private final MemberRepository memberRepository;	private final FriendRequestRepository friendRequestRepository;	@Transactional	@Override	public FriendReqAlarmRespDto sendAlarm(FriendReqAlarmReqDto friendReqAlarmReqDto) {		try {			Member my = memberRepository.findByMemberUuid(friendReqAlarmReqDto.getMyUuid());			Member friend = memberRepository.findByMemberUuid(friendReqAlarmReqDto.getFriendUuid());			if (my == null || friend == null) {				throw new CustomApiException("사용자가 없습니다.");			}			FriendRequest friendRequest =				friendReqAlarmReqDto.toFriendRequestEntity(my, friend, null, UUID.randomUUID().toString());			FriendRequestStatus friendRequestStatus = FriendRequestStatus.builder()				.status(AlarmStatusEnum.valueOf("WAIT"))				.build();			friendRequestStatus.setFriendRequest(friendRequest); // FriendRequest와 연결			friendRequest.setFriendRequestStatus(friendRequestStatus); // 양방향 연관관계 설정			friendRequestRepository.save(friendRequest); // 한 번만 저장하여 FriendRequestStatus 함께 저장			return new FriendReqAlarmRespDto(friendRequest);		} catch (DataIntegrityViolationException e) {			throw new CustomApiException("알림보내기 실패");		}	}}