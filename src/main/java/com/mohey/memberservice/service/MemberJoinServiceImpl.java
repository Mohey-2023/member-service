package com.mohey.memberservice.service;import org.springframework.dao.DataIntegrityViolationException;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import com.mohey.memberservice.domain.Member;import com.mohey.memberservice.domain.MemberDevice;import com.mohey.memberservice.dto.JoinReqDto;import com.mohey.memberservice.dto.JoinRespDto;import com.mohey.memberservice.ex.CustomApiException;import com.mohey.memberservice.repository.MemberDeviceAliveStatusRepository;import com.mohey.memberservice.repository.MemberDeviceNotiStatusRepository;import com.mohey.memberservice.repository.MemberDeviceRepository;import com.mohey.memberservice.repository.MemberInfoRepository;import com.mohey.memberservice.repository.MemberProfileRepository;import com.mohey.memberservice.repository.MemberRepository;import lombok.RequiredArgsConstructor;@RequiredArgsConstructor@Servicepublic class MemberJoinServiceImpl implements MemberJoinService {	private final MemberRepository memberRepository;	private final MemberInfoRepository memberInfoRepository;	private final MemberProfileRepository memberProfileRepository;	private final MemberDeviceRepository memberDeviceRepository;	private final MemberDeviceNotiStatusRepository memberDeviceNotiStatusRepository;	private final MemberDeviceAliveStatusRepository memberDeviceAliveStatusRepository;	@Transactional	@Override	public JoinRespDto register(JoinReqDto joinReqDto) {		try {			// Member 객체 저장			Member member = memberRepository.save(joinReqDto.toMemberEntity());			// MemberInfo 객체 저장			memberInfoRepository.save(joinReqDto.toMemberInfoEntity(member));			// MemberProfile 객체 저장			memberProfileRepository.save(joinReqDto.toMemberProfileEntity());			// MemberDevice 객체 저장			MemberDevice memberDevice = memberDeviceRepository.save(joinReqDto.toMemberDeviceEntity(member));			// MemberDeviceNotiStatus 객체 저장			memberDeviceNotiStatusRepository.save(joinReqDto.toMemberDeviceNotiStatusEntity(memberDevice));			// MemberDeviceAliveStatus 객체 저장			memberDeviceAliveStatusRepository.save(joinReqDto.toMemberDeviceAliveStatusEntity(memberDevice));			return new JoinRespDto(member);		} catch (DataIntegrityViolationException e) {			throw new CustomApiException("회원가입 실패");		}	}}