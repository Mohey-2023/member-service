package com.mohey.memberservice.controller;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;import java.util.ArrayList;import java.util.List;import java.util.UUID;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.http.MediaType;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.ResultActions;import org.springframework.transaction.annotation.Transactional;import com.fasterxml.jackson.databind.ObjectMapper;import com.mohey.memberservice.dto.memberjoin.JoinReqDto;@AutoConfigureMockMvc@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.MOCK)class MemberJoinControllerTest {	@Autowired	private MockMvc mvc;	@Autowired	private ObjectMapper om;	@Transactional	@Test	public void join_success_test() throws Exception {		// given		List<String> interests = new ArrayList<>();		interests.add("운동");		interests.add("기타");		interests.add("학습");		JoinReqDto joinReqDto = new JoinReqDto();		joinReqDto.setBirthDate("1994-12-01");		joinReqDto.setMemberUuid(UUID.randomUUID().toString());		joinReqDto.setGender("MAN");		joinReqDto.setNickname("제발");		joinReqDto.setInterests(interests);		joinReqDto.setDeviceUuid(UUID.randomUUID().toString());		joinReqDto.setDeviceToken("토큰토큰토큰");		joinReqDto.setSelfIntroduction("하하하하핳");		joinReqDto.setProfile_url("http://www.aa.com");		String requestBody = om.writeValueAsString(joinReqDto);		System.out.println("테스트 : " + requestBody);		// when		ResultActions resultActions = mvc			.perform(post("/members/join").content(requestBody).contentType(MediaType.APPLICATION_JSON));		// String responseBody =		// resultActions.andReturn().getResponse().getContentAsString();		// System.out.println("테스트 : " + responseBody);		// then		resultActions.andExpect(status().isCreated());	}	@Transactional	@Test	public void join_fail_test() throws Exception {		// given		List<String> interests = new ArrayList<>();		interests.add("운동");		interests.add("기타");		interests.add("학습");		JoinReqDto joinReqDto = new JoinReqDto();		joinReqDto.setBirthDate("1994-12-01");		joinReqDto.setMemberUuid(UUID.randomUUID().toString());		joinReqDto.setInterests(interests);		//joinReqDto.setGender("MAN");		joinReqDto.setNickname("제발");		joinReqDto.setDeviceUuid(UUID.randomUUID().toString());		joinReqDto.setDeviceToken("토큰토큰토큰");		joinReqDto.setSelfIntroduction("하하하하핳");		joinReqDto.setProfile_url("http://www.aa.com");		String requestBody = om.writeValueAsString(joinReqDto);		System.out.println("테스트 : " + requestBody);		// when		ResultActions resultActions = mvc			.perform(post("/members/join").content(requestBody).contentType(MediaType.APPLICATION_JSON));		String responseBody = resultActions.andReturn().getResponse().getContentAsString();		System.out.println("테스트 : " + responseBody);		resultActions.andExpect(status().isBadRequest());		// then	}}