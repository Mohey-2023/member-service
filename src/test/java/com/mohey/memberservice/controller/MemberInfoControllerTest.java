package com.mohey.memberservice.controller;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;import java.util.UUID;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.http.MediaType;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.ResultActions;import org.springframework.transaction.annotation.Transactional;import com.fasterxml.jackson.databind.ObjectMapper;import com.mohey.memberservice.domain.Member;import com.mohey.memberservice.dto.JoinReqDto;import com.mohey.memberservice.repository.MemberRepository;@Transactional@AutoConfigureMockMvc@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.MOCK)class MemberInfoControllerTest {	@Autowired	private MockMvc mvc;	@Autowired	private ObjectMapper om;	@Autowired	private MemberRepository memberRepository;	static final String memberUuid = UUID.randomUUID().toString();	@BeforeEach	public void setUp() {		//공통 given		JoinReqDto joinReqDto = new JoinReqDto();		joinReqDto.setBirthDate("1994-12-01");		joinReqDto.setMemberUuid(memberUuid);		joinReqDto.setGender("MAN");		Member member = memberRepository.save(joinReqDto.toMemberEntity());	}	@Transactional	@Test	public void getInfo_success_test() throws Exception {		// given		// when		ResultActions resultActions = mvc.perform(				get("/memberInfo/{memberUuid}/getInfo", memberUuid)						.contentType(MediaType.APPLICATION_JSON)		);		String responseBody =				resultActions.andReturn().getResponse().getContentAsString();		System.out.println("테스트 : " + responseBody);		// then		resultActions.andExpect(status().isOk());	}	@Transactional	@Test	public void getInfo_fail_test() throws Exception {		// given		// when		ResultActions resultActions = mvc.perform(				get("/memberInfo/{memberUuid}/getInfo", "2532")						.contentType(MediaType.APPLICATION_JSON)		);		String responseBody =				resultActions.andReturn().getResponse().getContentAsString();		System.out.println("테스트 : " + responseBody);		// then		resultActions.andExpect(status().isBadRequest());	}	@Transactional	@Test	public void getInerest_success_test() throws Exception {		// given		// when		ResultActions resultActions = mvc.perform(				get("/memberInfo/{memberUuid}/getInterest", memberUuid)						.contentType(MediaType.APPLICATION_JSON)		);		String responseBody =				resultActions.andReturn().getResponse().getContentAsString();		System.out.println("테스트 : " + responseBody);		// then		resultActions.andExpect(status().isOk());	}	@Transactional	@Test	public void getInerest_fail_test() throws Exception {		// given		// when		ResultActions resultActions = mvc.perform(				get("/memberInfo/{memberUuid}/getInterest", 1111)						.contentType(MediaType.APPLICATION_JSON)		);		String responseBody =				resultActions.andReturn().getResponse().getContentAsString();		System.out.println("테스트 : " + responseBody);		// then		resultActions.andExpect(status().isBadRequest());	}}