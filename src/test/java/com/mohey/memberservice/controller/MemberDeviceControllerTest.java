package com.mohey.memberservice.controller;import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;import java.util.UUID;import org.junit.jupiter.api.Test;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;import org.springframework.boot.test.context.SpringBootTest;import org.springframework.http.MediaType;import org.springframework.test.web.servlet.MockMvc;import org.springframework.test.web.servlet.ResultActions;import org.springframework.transaction.annotation.Transactional;import com.fasterxml.jackson.databind.ObjectMapper;import com.mohey.memberservice.domain.Member;import com.mohey.memberservice.dto.JoinReqDto;import com.mohey.memberservice.dto.memberdevice.DeviceRegisterReqDto;import com.mohey.memberservice.repository.MemberRepository;@AutoConfigureMockMvc@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.MOCK)class MemberDeviceControllerTest {	@Autowired	private MockMvc mvc;	@Autowired	private ObjectMapper om;	@Autowired	private MemberRepository memberRepository;	@Transactional	@Test	public void register_success_test() throws Exception {		// given		String memberUuid = UUID.randomUUID().toString();		DeviceRegisterReqDto deviceRegisterReqDto = new DeviceRegisterReqDto();		deviceRegisterReqDto.setDeviceToken("zzzzzzzzzzzzz");		deviceRegisterReqDto.setDeviceUuid(UUID.randomUUID().toString());		deviceRegisterReqDto.setMemberUuid(memberUuid);		JoinReqDto joinReqDto = new JoinReqDto();		joinReqDto.setBirthDate("1994-12-01");		joinReqDto.setMemberUuid(memberUuid);		joinReqDto.setGender("MAN");		joinReqDto.setNickname("제발");		Member member = memberRepository.save(joinReqDto.toMemberEntity());		String requestBody = om.writeValueAsString(deviceRegisterReqDto);		System.out.println("테스트 : " + requestBody);		// when		ResultActions resultActions = mvc			.perform(post("/members/device/register").content(requestBody).contentType(MediaType.APPLICATION_JSON));		// String responseBody =		// resultActions.andReturn().getResponse().getContentAsString();		// System.out.println("테스트 : " + responseBody);		// then		resultActions.andExpect(status().isOk());	}}